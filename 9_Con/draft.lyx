#LyX 2.3 created this file. For more info see http://www.lyx.org/
\lyxformat 544
\begin_document
\begin_header
\save_transient_properties true
\origin unavailable
\textclass article
\begin_preamble
\usepackage{xcolor}
\usepackage{tikz-cd}
\tikzcdset{%
    triple line/.code={\tikzset{%
        double equal sign distance, % replace by double distance = 'measure' 
        double=\pgfkeysvalueof{/tikz/commutative diagrams/background color}}},
    quadruple line/.code={\tikzset{%
        double equal sign distance, % replace by double distance = 'measure'
        double=\pgfkeysvalueof{/tikz/commutative diagrams/background color}}},
    Rrightarrow/.code={\tikzcdset{triple line}\pgfsetarrows{tikzcd implies cap-tikzcd implies}},
    RRightarrow/.code={\tikzcdset{quadruple line}\pgfsetarrows{tikzcd implies cap-tikzcd implies}}
}    
\newcommand*{\tarrow}[2][]{\arrow[Rrightarrow, #1]{#2}\arrow[dash, shorten >= 0.5pt, #1]{#2}}
\newcommand*{\qarrow}[2][]{\arrow[RRightarrow, #1]{#2}\arrow[equal, double distance = 0.25pt, shorten >= 1.28pt, #1]{#2}}
\end_preamble
\use_default_options true
\begin_modules
todonotes
\end_modules
\maintain_unincluded_children false
\language english
\language_package default
\inputencoding auto
\fontencoding global
\font_roman "default" "default"
\font_sans "default" "default"
\font_typewriter "default" "default"
\font_math "auto" "auto"
\font_default_family default
\use_non_tex_fonts false
\font_sc false
\font_osf false
\font_sf_scale 100 100
\font_tt_scale 100 100
\use_microtype false
\use_dash_ligatures true
\graphics default
\default_output_format default
\output_sync 0
\bibtex_command default
\index_command default
\paperfontsize default
\spacing single
\use_hyperref false
\papersize letterpaper
\use_geometry true
\use_package amsmath 1
\use_package amssymb 1
\use_package cancel 1
\use_package esint 1
\use_package mathdots 1
\use_package mathtools 1
\use_package mhchem 1
\use_package stackrel 1
\use_package stmaryrd 1
\use_package undertilde 1
\cite_engine basic
\cite_engine_type default
\biblio_style plain
\use_bibtopic false
\use_indices false
\paperorientation portrait
\suppress_date false
\justification true
\use_refstyle 1
\use_minted 0
\index Index
\shortcut idx
\color #008000
\end_index
\leftmargin 2cm
\topmargin 2cm
\rightmargin 2cm
\bottommargin 2cm
\headheight 2cm
\headsep 2cm
\footskip 2cm
\secnumdepth 3
\tocdepth 3
\paragraph_separation indent
\paragraph_indentation default
\is_math_indent 0
\math_numbering_side default
\quotes_style english
\dynamic_quotes 0
\papercolumns 1
\papersides 2
\paperpagestyle default
\tracking_changes false
\output_changes false
\html_math_output 0
\html_css_as_file 0
\html_be_strict false
\end_header

\begin_body

\begin_layout Title
Chapter 7 (draft): Conclusion
\end_layout

\begin_layout Author
Mark Lemay
\end_layout

\begin_layout Standard
This thesis has attempted to articulate and address a common hesitation
 around dependent types.
 Programmers do not want do be interrupted.
 Especially if the interruption is about a chance of an error.
 Addressing this legitimate concern has lead to a new way of treating warnings
 in a dependent type system.
 By creating a parallel system where checks are made and given runtime behavior,
 programmers still get all of the benefits, but fewer drawbacks of dependent
 type systems.
\end_layout

\begin_layout Standard
This turned out to be surpassingly more subtle then expected.
 As we saw in Chapter 3, the programmer's intent needs to be inferred, so
 that a reasonable check can be localized.
 This is possible through an extension to bidirectional type checking.
 Runtime errors complicate the semantics, this issue was sidestepped by
 applying a new relation that extracts blame.
 Checks need their own runtime behavior, which is strait forward in the
 pure functional setting.
\end_layout

\begin_layout Standard
Further, user defined data turned out to be far more complicated then anticipate
d.
 Extending pattern matching to track equalities seems like a clever idea,
 however the formalism in Chapter 5 is not as simple as we might like.
 It is unclear if a simpler approach is possible.
\end_layout

\begin_layout Standard
Finally, in Chapter 6, there are several ways to improve the current system
 and build towards future work.
\begin_inset Flex TODO Note (Margin)
status open

\begin_layout Plain Layout
more
\end_layout

\end_inset


\end_layout

\begin_layout Standard
The approach to warnings presented in this thesis may be more generally
 applicable.
 Type systems can still be designed to harshly avoid errors, but by creating
 a parallel system where checks are made and given runtime behavior, the
 type system will be less imposing to new users.
 For instance, many interesting linear type systems are currently being
 explored, allowing warnings may make these systems more usable to programmers
 who are not used to those restrictions.
\end_layout

\begin_layout Standard
Dependent types have seemed on the verge of mainstream use for decades.
 While dependent types are not mainstream yet, they have the unique potential
 to bridge the gap between those who program and those who prove.
 Each community has built invaluable expertise that could benefit the other.
 Once that connection is made solid, more robust software is the least we
 should expect.
\end_layout

\begin_layout Standard
While this thesis has not single handedly made this connection, I think
 it is a necessary piece of the puzzle.
\end_layout

\begin_layout Part
TODO
\end_layout

\begin_layout List of TODOs

\end_layout

\begin_layout Section
notes
\end_layout

\begin_layout Section
unused
\end_layout

\end_body
\end_document
